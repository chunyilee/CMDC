/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package multipledisplay;

import clt.api.Unit;
import java.io.File;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;

/**
 *
 * @author A000847
 */
public class JDialogSetting extends javax.swing.JDialog {

    Settings set = null;
    public boolean saveChanged = false;
    public boolean stateChanged = false;

    /**
     * Creates new form JDialogSetting
     */
    public JDialogSetting(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        jrbRS232 = new javax.swing.JRadioButton();
        jrbEthernet = new javax.swing.JRadioButton();
        jpanRS232 = new javax.swing.JPanel();
        jcobBaudRate = new javax.swing.JComboBox();
        jLabel2 = new javax.swing.JLabel();
        jcobParity = new javax.swing.JComboBox();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jcobDataBit = new javax.swing.JComboBox();
        jcobStopBit = new javax.swing.JComboBox();
        jLabel5 = new javax.swing.JLabel();
        jpanEthernet = new javax.swing.JPanel();
        spPort = new javax.swing.JSpinner();
        jLabel6 = new javax.swing.JLabel();
        lblLocalIP = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        jbtnBrowse = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        jcbDL_Birghtness = new javax.swing.JCheckBox();
        jLabel10 = new javax.swing.JLabel();
        txtLogPath = new javax.swing.JTextPane();
        jcbFan0Speed = new javax.swing.JCheckBox();
        jcbFan1Speed = new javax.swing.JCheckBox();
        jcbConnectState = new javax.swing.JCheckBox();
        jcbBacklight = new javax.swing.JCheckBox();
        jcbInputSource = new javax.swing.JCheckBox();
        jcbMute = new javax.swing.JCheckBox();
        jcbColorTemperature = new javax.swing.JCheckBox();
        jcbContrast = new javax.swing.JCheckBox();
        jcbPhase = new javax.swing.JCheckBox();
        jcbBrightness = new javax.swing.JCheckBox();
        jcbVolume = new javax.swing.JCheckBox();
        jLabel12 = new javax.swing.JLabel();
        jcobUpdateFrequency = new javax.swing.JComboBox();
        jcbStartService = new javax.swing.JCheckBox();
        jbtnSave = new javax.swing.JButton();
        jbtnClose = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Setting");
        setBounds(new java.awt.Rectangle(0, 0, 600, 800));
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Connectiion", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("微軟正黑體", 0, 12))); // NOI18N
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel7.setFont(new java.awt.Font("微軟正黑體", 0, 12)); // NOI18N
        jLabel7.setText("Connection Mode:");
        jPanel1.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 25, -1, -1));

        jrbRS232.setFont(new java.awt.Font("微軟正黑體", 0, 12)); // NOI18N
        jrbRS232.setSelected(true);
        jrbRS232.setText("RS232");
        jrbRS232.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jrbRS232ActionPerformed(evt);
            }
        });
        jPanel1.add(jrbRS232, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 22, 70, -1));

        jrbEthernet.setFont(new java.awt.Font("微軟正黑體", 0, 12)); // NOI18N
        jrbEthernet.setText("Ethernet");
        jrbEthernet.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jrbEthernetActionPerformed(evt);
            }
        });
        jPanel1.add(jrbEthernet, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 22, -1, -1));

        jpanRS232.setFont(new java.awt.Font("微軟正黑體", 0, 12)); // NOI18N
        jpanRS232.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jcobBaudRate.setFont(new java.awt.Font("微軟正黑體", 0, 12)); // NOI18N
        jcobBaudRate.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "9600", "14400", "19200", "38400", "56000", "57600", "115200", "128000", "256000", "", "" }));
        jcobBaudRate.setSelectedIndex(6);
        jcobBaudRate.setToolTipText("");
        jcobBaudRate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcobBaudRateActionPerformed(evt);
            }
        });
        jpanRS232.add(jcobBaudRate, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 10, 80, 20));

        jLabel2.setFont(new java.awt.Font("微軟正黑體", 0, 12)); // NOI18N
        jLabel2.setText("Baud Rate");
        jpanRS232.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 10, -1, 20));

        jcobParity.setFont(new java.awt.Font("微軟正黑體", 0, 12)); // NOI18N
        jcobParity.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "NONE", "ODD", "EVEN", "MARK", "SPACE" }));
        jpanRS232.add(jcobParity, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 10, 80, 20));

        jLabel3.setFont(new java.awt.Font("微軟正黑體", 0, 12)); // NOI18N
        jLabel3.setText("Parity");
        jpanRS232.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 10, 50, 20));

        jLabel4.setFont(new java.awt.Font("微軟正黑體", 0, 12)); // NOI18N
        jLabel4.setText("Data Bit");
        jLabel4.setToolTipText("");
        jpanRS232.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 40, 60, 20));

        jcobDataBit.setFont(new java.awt.Font("微軟正黑體", 0, 12)); // NOI18N
        jcobDataBit.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "0", "1", "2", "3", "4", "5", "6", "7", "8" }));
        jcobDataBit.setSelectedIndex(8);
        jpanRS232.add(jcobDataBit, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 40, 80, 20));

        jcobStopBit.setFont(new java.awt.Font("微軟正黑體", 0, 12)); // NOI18N
        jcobStopBit.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "0", "1", "2", "1.5" }));
        jcobStopBit.setSelectedIndex(1);
        jpanRS232.add(jcobStopBit, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 40, 80, 20));

        jLabel5.setFont(new java.awt.Font("微軟正黑體", 0, 12)); // NOI18N
        jLabel5.setText("Stop Bit");
        jpanRS232.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 40, 50, 20));

        jPanel1.add(jpanRS232, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 50, 460, 40));

        jpanEthernet.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        spPort.setFont(new java.awt.Font("微軟正黑體", 0, 12)); // NOI18N
        spPort.setModel(new javax.swing.SpinnerNumberModel(23, 0, 65535, 1));
        jpanEthernet.add(spPort, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 10, 70, 20));

        jLabel6.setFont(new java.awt.Font("微軟正黑體", 0, 12)); // NOI18N
        jLabel6.setText("Port:");
        jpanEthernet.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 10, 30, 20));

        lblLocalIP.setFont(new java.awt.Font("微軟正黑體", 0, 12)); // NOI18N
        lblLocalIP.setText("192.168.1.114");
        jpanEthernet.add(lblLocalIP, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 10, 110, 20));

        jLabel13.setFont(new java.awt.Font("微軟正黑體", 0, 12)); // NOI18N
        jLabel13.setText("Local IP:");
        jpanEthernet.add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 10, 60, 20));

        jPanel1.add(jpanEthernet, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 50, 460, 40));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 490, 100));

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Logging", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("微軟正黑體", 0, 12))); // NOI18N
        jPanel2.setFont(new java.awt.Font("微軟正黑體", 0, 12)); // NOI18N
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel8.setFont(new java.awt.Font("微軟正黑體", 0, 12)); // NOI18N
        jLabel8.setText("Record Field:");
        jPanel2.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 90, -1, -1));

        jbtnBrowse.setFont(new java.awt.Font("微軟正黑體", 0, 12)); // NOI18N
        jbtnBrowse.setText("Start");
        jbtnBrowse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnBrowseActionPerformed(evt);
            }
        });
        jPanel2.add(jbtnBrowse, new org.netbeans.lib.awtextra.AbsoluteConstraints(448, 27, 30, -1));

        jLabel9.setFont(new java.awt.Font("微軟正黑體", 0, 12)); // NOI18N
        jLabel9.setText("Log Folder:");
        jPanel2.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 30, -1, -1));

        jcbDL_Birghtness.setFont(new java.awt.Font("微軟正黑體", 0, 12)); // NOI18N
        jcbDL_Birghtness.setSelected(true);
        jcbDL_Birghtness.setText("Brightness");
        jcbDL_Birghtness.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcbFan0SpeedActionPerformed(evt);
            }
        });
        jPanel2.add(jcbDL_Birghtness, new org.netbeans.lib.awtextra.AbsoluteConstraints(35, 170, -1, -1));

        jLabel10.setFont(new java.awt.Font("微軟正黑體", 0, 12)); // NOI18N
        jLabel10.setText("Update Frequency:");
        jPanel2.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 60, -1, -1));

        txtLogPath.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        txtLogPath.setFont(new java.awt.Font("微軟正黑體", 0, 12)); // NOI18N
        jPanel2.add(txtLogPath, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 30, 340, 20));

        jcbFan0Speed.setFont(new java.awt.Font("微軟正黑體", 0, 12)); // NOI18N
        jcbFan0Speed.setText("Fan 0 Speed");
        jcbFan0Speed.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jcbFan0SpeedStateChanged(evt);
            }
        });
        jcbFan0Speed.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcbFan0SpeedActionPerformed(evt);
            }
        });
        jPanel2.add(jcbFan0Speed, new org.netbeans.lib.awtextra.AbsoluteConstraints(35, 110, -1, -1));

        jcbFan1Speed.setFont(new java.awt.Font("微軟正黑體", 0, 12)); // NOI18N
        jcbFan1Speed.setText("Fan 1 Speed");
        jcbFan1Speed.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcbFan0SpeedActionPerformed(evt);
            }
        });
        jPanel2.add(jcbFan1Speed, new org.netbeans.lib.awtextra.AbsoluteConstraints(35, 140, -1, -1));

        jcbConnectState.setFont(new java.awt.Font("微軟正黑體", 0, 12)); // NOI18N
        jcbConnectState.setSelected(true);
        jcbConnectState.setText("Connect State");
        jcbConnectState.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcbFan0SpeedActionPerformed(evt);
            }
        });
        jPanel2.add(jcbConnectState, new org.netbeans.lib.awtextra.AbsoluteConstraints(365, 170, -1, 30));

        jcbBacklight.setFont(new java.awt.Font("微軟正黑體", 0, 12)); // NOI18N
        jcbBacklight.setSelected(true);
        jcbBacklight.setText("Backlight");
        jcbBacklight.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcbFan0SpeedActionPerformed(evt);
            }
        });
        jPanel2.add(jcbBacklight, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 110, -1, -1));

        jcbInputSource.setFont(new java.awt.Font("微軟正黑體", 0, 12)); // NOI18N
        jcbInputSource.setSelected(true);
        jcbInputSource.setText("Input Source");
        jcbInputSource.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcbFan0SpeedActionPerformed(evt);
            }
        });
        jPanel2.add(jcbInputSource, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 140, -1, -1));

        jcbMute.setFont(new java.awt.Font("微軟正黑體", 0, 12)); // NOI18N
        jcbMute.setText("Mute Status");
        jcbMute.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcbFan0SpeedActionPerformed(evt);
            }
        });
        jPanel2.add(jcbMute, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 170, -1, -1));

        jcbColorTemperature.setFont(new java.awt.Font("微軟正黑體", 0, 12)); // NOI18N
        jcbColorTemperature.setText("Color Temperature");
        jcbColorTemperature.setActionCommand("Volume");
        jcbColorTemperature.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcbFan0SpeedActionPerformed(evt);
            }
        });
        jPanel2.add(jcbColorTemperature, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 200, -1, 30));

        jcbContrast.setFont(new java.awt.Font("微軟正黑體", 0, 12)); // NOI18N
        jcbContrast.setText("Contrast");
        jcbContrast.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcbFan0SpeedActionPerformed(evt);
            }
        });
        jPanel2.add(jcbContrast, new org.netbeans.lib.awtextra.AbsoluteConstraints(365, 110, -1, -1));

        jcbPhase.setFont(new java.awt.Font("微軟正黑體", 0, 12)); // NOI18N
        jcbPhase.setText("Phase");
        jcbPhase.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcbFan0SpeedActionPerformed(evt);
            }
        });
        jPanel2.add(jcbPhase, new org.netbeans.lib.awtextra.AbsoluteConstraints(365, 140, -1, -1));

        jcbBrightness.setFont(new java.awt.Font("微軟正黑體", 0, 12)); // NOI18N
        jcbBrightness.setSelected(true);
        jcbBrightness.setText("Brightness Switch");
        jcbBrightness.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcbFan0SpeedActionPerformed(evt);
            }
        });
        jPanel2.add(jcbBrightness, new org.netbeans.lib.awtextra.AbsoluteConstraints(35, 200, -1, -1));

        jcbVolume.setFont(new java.awt.Font("微軟正黑體", 0, 12)); // NOI18N
        jcbVolume.setSelected(true);
        jcbVolume.setText("Volume");
        jcbVolume.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcbFan0SpeedActionPerformed(evt);
            }
        });
        jPanel2.add(jcbVolume, new org.netbeans.lib.awtextra.AbsoluteConstraints(365, 200, -1, 30));

        jLabel12.setFont(new java.awt.Font("微軟正黑體", 0, 12)); // NOI18N
        jLabel12.setText("(min.)");
        jPanel2.add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(208, 62, -1, -1));

        jcobUpdateFrequency.setFont(new java.awt.Font("微軟正黑體", 0, 12)); // NOI18N
        jcobUpdateFrequency.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "5", "10", "15", "20", "25", "30", "45", "60", "90", "120", "150", "180", "210", "240" }));
        jcobUpdateFrequency.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcobUpdateFrequencyActionPerformed(evt);
            }
        });
        jPanel2.add(jcobUpdateFrequency, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 60, 60, -1));

        getContentPane().add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 110, 490, 240));

        jcbStartService.setFont(new java.awt.Font("微軟正黑體", 0, 12)); // NOI18N
        jcbStartService.setText("Start Servic with program starting.");
        getContentPane().add(jcbStartService, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 350, -1, -1));
        jcbStartService.getAccessibleContext().setAccessibleName("Enable service with program starting.");

        jbtnSave.setFont(new java.awt.Font("微軟正黑體", 0, 12)); // NOI18N
        jbtnSave.setText("Save");
        jbtnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnSaveActionPerformed(evt);
            }
        });
        getContentPane().add(jbtnSave, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 350, 80, 25));

        jbtnClose.setFont(new java.awt.Font("微軟正黑體", 0, 12)); // NOI18N
        jbtnClose.setText("Close");
        jbtnClose.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnCloseActionPerformed(evt);
            }
        });
        getContentPane().add(jbtnClose, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 350, 80, 25));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private boolean saveXML() {

        try {
            //loakd  setting
            set.setBaudRate(jcobBaudRate.getSelectedItem().toString());
            set.setDataBit(Integer.parseInt(jcobDataBit.getSelectedItem().toString()));
            set.setParity(jcobParity.getSelectedItem().toString());
            set.setStopBit(Integer.parseInt(jcobStopBit.getSelectedItem().toString()));
            set.setUpdateFrequency(jcobUpdateFrequency.getSelectedItem().toString());
            set.setPort(spPort.getValue().toString());

            set.setLogFolder(this.txtLogPath.getText());
            set.logBacklightSatus = this.jcbBacklight.isSelected();
            set.logBrightness = this.jcbBrightness.isSelected();
            set.logColorTemperature = this.jcbColorTemperature.isSelected();
            set.logConnectStatus = this.jcbConnectState.isSelected();
            set.logContrast = this.jcbContrast.isSelected();
            set.logFan0Speed = this.jcbFan0Speed.isSelected();
            set.logFan1Speed = this.jcbFan1Speed.isSelected();
            set.logInputSource = this.jcbInputSource.isSelected();
            set.logMuteStatus = this.jcbMute.isSelected();
            set.logPhase = this.jcbPhase.isSelected();
            set.logDigitalBrightnessLevel = this.jcbDL_Birghtness.isSelected();
            set.logStartWithBoot = this.jcbStartService.isSelected();
            set.logVolume = this.jcbVolume.isSelected();

            set.SaveXML();
            return true;
        } catch (Exception exp) {
            exp.printStackTrace();
            return false;
        }
    }

    private void loadXML() {
        try {
            File f = new File(Functions.cfgXml);
            if (f.exists()) {
                set = Settings.LoadXML(Functions.cfgXml);
            } else {
                set = new Settings();
                set.SaveXML(Functions.cfgXml);
            }
            //loakd  setting
            if (set.useCOM) {
                this.jrbRS232.setSelected(true);
                this.jpanRS232.setVisible(true);
                this.jpanEthernet.setVisible(false);
            } else {
                this.jrbEthernet.setSelected(true);
                this.jpanRS232.setVisible(false);
                this.jpanEthernet.setVisible(true);
            }

            this.jcobBaudRate.setSelectedItem(set.getBaudRate());
            this.jcobDataBit.setSelectedItem(set.getDataBit());
            this.jcobParity.setSelectedItem(set.getParity());
            this.jcobStopBit.setSelectedItem(set.getStopBit());
            this.jcobUpdateFrequency.setSelectedItem(set.getUpdateFrequency());
            this.spPort.setValue(Integer.parseInt(set.getPort()));
            this.txtLogPath.setText(set.getLogFolder());
            this.jcbBacklight.setSelected(set.logBacklightSatus);
            this.jcbBrightness.setSelected(set.logBrightness);
            this.jcbColorTemperature.setSelected(set.logColorTemperature);
            this.jcbConnectState.setSelected(set.logConnectStatus);
            this.jcbContrast.setSelected(set.logContrast);
            this.jcbFan0Speed.setSelected(set.logFan0Speed);
            this.jcbFan1Speed.setSelected(set.logFan1Speed);
            this.jcbInputSource.setSelected(set.logInputSource);
            this.jcbMute.setSelected(set.logMuteStatus);
            this.jcbPhase.setSelected(set.logPhase);
            this.jcbDL_Birghtness.setSelected(set.logDigitalBrightnessLevel);
            this.jcbStartService.setSelected(set.logStartWithBoot);
            this.jcbVolume.setSelected(set.logVolume);
            stateChanged=false;

        } catch (Exception exp) {
            Functions.showMsgDialog(exp.getMessage());
        }
    }

    private void jbtnBrowseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnBrowseActionPerformed
        JFileChooser j = new JFileChooser();
        j.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        j.setCurrentDirectory(new java.io.File("."));
        j.setAcceptAllFileFilterUsed(false);
        if (j.showOpenDialog(this) == JFileChooser.APPROVE_OPTION) {
            txtLogPath.setText(j.getSelectedFile().getPath());
            stateChanged=true;
    }//GEN-LAST:event_jbtnBrowseActionPerformed
    }
    private void jbtnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnSaveActionPerformed
        if (saveXML()) {
            Functions.showMsgDialog("Save sucessfully.");
            stateChanged=false;
            saveChanged = true;
            this.dispose();
        };
    }//GEN-LAST:event_jbtnSaveActionPerformed

    private void jbtnCloseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnCloseActionPerformed
        this.dispose();
    }//GEN-LAST:event_jbtnCloseActionPerformed

    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated
    }//GEN-LAST:event_formWindowActivated

    private void jrbRS232ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jrbRS232ActionPerformed
        
        jpanRS232.setVisible(true);
        jpanEthernet.setVisible(false);
    }//GEN-LAST:event_jrbRS232ActionPerformed

    private void jrbEthernetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jrbEthernetActionPerformed
        stateChanged=true;
        jpanRS232.setVisible(false);
        jpanEthernet.setVisible(true);
    }//GEN-LAST:event_jrbEthernetActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened

        this.jLabel3.setVisible(false);
        this.jLabel4.setVisible(false);
        this.jLabel5.setVisible(false);
        this.jLabel6.setVisible(false);
        this.jcobDataBit.setVisible(false);
        this.jcobParity.setVisible(false);
        this.jcobStopBit.setVisible(false);
        this.spPort.setVisible(false);
        this.buttonGroup1.add(jrbRS232);
        this.buttonGroup1.add(jrbEthernet);
        lblLocalIP.setText(Unit.listHostAddress());

        loadXML();
    }//GEN-LAST:event_formWindowOpened

    private void jcbFan0SpeedStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jcbFan0SpeedStateChanged
    }//GEN-LAST:event_jcbFan0SpeedStateChanged

    private void jcbFan0SpeedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcbFan0SpeedActionPerformed
        // TODO add your handling code here:   
        if (jcbFan0Speed.isSelected()) {
               saveChanged = false;
            stateChanged = true;
            //Functions.showMsgDialog("you selected the option.");
        }
    }//GEN-LAST:event_jcbFan0SpeedActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        if (stateChanged && !this.jcbStartService.isSelected()) {
            
            String askString="The recorded fields has been changed. Would you like turn on the sevice at the Program starting?";
            if (Functions.showYesNoDialog(askString)) {
                this.jcbStartService.setSelected(true);
            }
        }
          if (stateChanged) {   
           String askString="The settings file has been changed. Do you want to save it?";
          if (Functions.showYesNoDialog(askString)) {
              jbtnSaveActionPerformed(null);
          }
        }
    }//GEN-LAST:event_formWindowClosing

    private void jcobBaudRateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcobBaudRateActionPerformed
      stateChanged=true;
    }//GEN-LAST:event_jcobBaudRateActionPerformed

    private void jcobUpdateFrequencyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcobUpdateFrequencyActionPerformed
       stateChanged=true;
    }//GEN-LAST:event_jcobUpdateFrequencyActionPerformed

    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;


                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(JDialogSetting.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(JDialogSetting.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(JDialogSetting.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JDialogSetting.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                JDialogSetting dialog = new JDialogSetting(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton jbtnBrowse;
    private javax.swing.JButton jbtnClose;
    private javax.swing.JButton jbtnSave;
    private javax.swing.JCheckBox jcbBacklight;
    private javax.swing.JCheckBox jcbBrightness;
    private javax.swing.JCheckBox jcbColorTemperature;
    private javax.swing.JCheckBox jcbConnectState;
    private javax.swing.JCheckBox jcbContrast;
    private javax.swing.JCheckBox jcbDL_Birghtness;
    private javax.swing.JCheckBox jcbFan0Speed;
    private javax.swing.JCheckBox jcbFan1Speed;
    private javax.swing.JCheckBox jcbInputSource;
    private javax.swing.JCheckBox jcbMute;
    private javax.swing.JCheckBox jcbPhase;
    private javax.swing.JCheckBox jcbStartService;
    private javax.swing.JCheckBox jcbVolume;
    private javax.swing.JComboBox jcobBaudRate;
    private javax.swing.JComboBox jcobDataBit;
    private javax.swing.JComboBox jcobParity;
    private javax.swing.JComboBox jcobStopBit;
    private javax.swing.JComboBox jcobUpdateFrequency;
    private javax.swing.JPanel jpanEthernet;
    private javax.swing.JPanel jpanRS232;
    private javax.swing.JRadioButton jrbEthernet;
    private javax.swing.JRadioButton jrbRS232;
    private javax.swing.JLabel lblLocalIP;
    private javax.swing.JSpinner spPort;
    private javax.swing.JTextPane txtLogPath;
    // End of variables declaration//GEN-END:variables
}
